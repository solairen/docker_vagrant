name: Check vagrant version
on:
  schedule:
    - cron: "0 0 * * 1"
jobs:
  Check_Version:
    runs-on: ubuntu-latest
    outputs:
      ver: ${{ steps.dockerfile_update.outputs.response }}
    steps:
    - name: Login to GitHub registry
      run: echo ${{ secrets.token }} | docker login docker.pkg.github.com --username ${{ github.repository_owner }} --password-stdin
    - name: Checkout version_checker repository
      uses: actions/checkout@v2
      with:
        repository: ${{ github.repository_owner }}/version_checker
        ref: main
        token: ${{ secrets.token }}
        path: .github/actions/version_checker
    - name: Checkout docker_vagrant repository
      uses: actions/checkout@v2
      with:
        repository: ${{ github.repository }}
        ref: main
        token: ${{ secrets.token }}
        path: .github/actions/${{ github.repository }}
    - name: Update dockerfile
      id: dockerfile_update
      uses: ./.github/actions/version_checker
      with:
        component: vagrant
        path: ./.github/actions/${{ github.repository }}
        token: ${{ secrets.token }}
    - name: Upload dockerfile
      if: steps.dockerfile_update.outputs.response != ''
      uses: actions/upload-artifact@v2
      with:
        name: dockerfile
        path: ./.github/actions/${{ github.repository }}/Dockerfile
  Push_Changes:
    needs: Check_Version
    runs-on: ubuntu-latest
    if: needs.Check_Version.outputs.ver != ''
    steps:
    - name: Checkout docker_vagrant repository
      uses: actions/checkout@v2
      with:
        repository: ${{ github.repository }}
        ref: main
        token: ${{ secrets.token }}
        path: .github/actions/${{ github.repository }}
    - name: Download Dockerfile
      uses: actions/download-artifact@v2
      with:
        name: dockerfile
        path: .github/actions/${{ github.repository }}
    - name: Push changes to docker_vagrant repository
      uses: actions-js/push@master
      with:
        github_token: ${{ secrets.token }}
        author_email: ${{ secrets.mail }}
        author_name: ${{ github.repository_owner }}
        message: ${{ steps.dockerfile_update.outputs.response }}
        branch: main
        directory: .github/actions/${{ github.repository }}
        repository: ${{ github.repository }}
  Create_Release:
    needs:
      - Check_Version
      - Push_Changes
    runs-on: ubuntu-latest
    steps:
    - name: Checkout docker_vagrant repository
      uses: actions/checkout@v2
    - name: Get current date
      uses: srfrnk/current-time@master
      id: current-time
      with:
        format: YYYY-MM-DD
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.token }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ steps.current-time.outputs.formattedTime }}
        body: |
          Changes in this release:
            - Vagrant ${{ needs.Check_Version.outputs.ver }}
        draft: false
        prerelease: false
    - name: Cleanup
      uses: geekyeggo/delete-artifact@v1
      with:
        name: dockerfile
